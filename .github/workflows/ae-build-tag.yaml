# act -W .github/workflows/ae-build-tag.yaml -s AWS_ACCESS_KEY_ID -s AWS_SECRET_ACCESS_KEY --action-offline-mode push

name: aescape build on tags
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Tag to build'
        required: false
        default: ''
  push:
    paths-ignore:
      - '.github/**'
      - '.gitignore'
      - 'appveyor.yml'
    tags:
      - 'v*'

jobs:
  build_and_push:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Extract version
      run: |
        echo GITHUB_REF=$GITHUB_REF
        echo Input version: ${{ github.event.inputs.version }}
        VERSION=${GITHUB_REF#refs/tags/v}
        if [ -n "${{ github.event.inputs.version }}" ]; then
          VERSION=${{ github.event.inputs.version }}
        fi
        echo VERSION=$VERSION
        echo AE_VERSION=$VERSION >> $GITHUB_ENV

    # - name: AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-2
    # - name: Login to Amazon ECR
    #   uses: aws-actions/amazon-ecr-login@v2

    # - name: Extract metadata from Github (tag debug image)
    #   id: debug-meta
    #   uses: docker/metadata-action@v5
    #   with:
    #     images: 238850544904.dkr.ecr.us-east-2.amazonaws.com/fluent-bit
    #     flavor: |
    #       latest=false
    #       prefix=core-
    #     tags: |
    #       type=semver,pattern={{version}},suffix=-debug
    #       type=sha,prefix=core-{{branch}}-sha,suffix=-debug

    # - name: Build and push debug image
    #   id: build_image_debug
    #   uses: docker/build-push-action@v5
    #   with:
    #     file: ./dockerfiles/Dockerfile
    #     context: .
    #     platforms: linux/amd64
    #     target: debug
    #     # Must be disabled to provide legacy format images from the registry
    #     provenance: false
    #     push: true
    #     load: false
    #     tags: ${{ steps.debug-meta.outputs.tags }}
    #     labels: ${{ steps.debug-meta.outputs.labels }}
    #     build-args: |
    #       RELEASE_VERSION=${{ env.AE_VERSION }}

    # - name: Extract metadata from Github
    #   id: meta
    #   uses: docker/metadata-action@v5
    #   with:
    #     images: 238850544904.dkr.ecr.us-east-2.amazonaws.com/fluent-bit
    #     flavor: |
    #       latest=false
    #       prefix=core-
    #     tags: |
    #       type=semver,pattern={{version}}
    #       type=sha,prefix=core-{{branch}}-sha

    # - name: Build and push production image
    #   id: build_image
    #   uses: docker/build-push-action@v5
    #   with:
    #     file: ./dockerfiles/Dockerfile
    #     context: .
    #     platforms: linux/amd64
    #     target: production
    #     # Must be disabled to provide legacy format images from the registry
    #     provenance: false
    #     push: true
    #     load: false
    #     tags: ${{ steps.meta.outputs.tags }}
    #     labels: ${{ steps.meta.outputs.labels }}
    #     build-args: |
    #       RELEASE_VERSION=${{ env.AE_VERSION }}

    - name: Build deb file
      id: build_deb
      shell: bash
      run: |
        docker build --build-arg CMAKE_INSTALL_PREFIX=/opt/fluent-bit/ \
        --build-arg FLB_JEMALLOC=On \
        --build-arg FLB_TD=Off \
        --build-arg BASE_BUILDER=ubuntu-22.04-base \
        --build-arg PKG_VERSION=${{ env.AE_VERSION }} \
        --target builder \
        -t flb-ubuntu/22.04 \
        -f packaging/distros/ubuntu/Dockerfile \
        .
        mkdir -p deb_output
        docker run --rm -v "${PWD}/deb_output:/output" flb-ubuntu/22.04
        ls -l deb_output
        ls -l deb_output/fluent-bit_${{ env.AE_VERSION }}_amd64.deb

    - name: upload artifact
      uses: actions/upload-artifact@v4
      if: ${{ env.ACT != 'true' }}
      with:
        path: |
          deb_output/fluent-bit_${{ env.AE_VERSION }}_amd64.deb

    - name: upload artifact to s3
      uses: keithweaver/aws-s3-github-action@v1.0.0
      with:
        command: cp
        source: deb_output/fluent-bit_${{ env.AE_VERSION }}_amd64.deb
        destination: s3://aescape-releases/fluent/
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: us-east-2